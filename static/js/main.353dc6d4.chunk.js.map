{"version":3,"sources":["context/languages/language.enum.ts","hooks/routes/route.hook.ts","pages/Login/Login.styles.ts","context/languages/language.context.ts","pages/Login/Login.page.tsx","hooks/http/http.hook.ts","hooks/api/driver/driver-api.hook.ts","hooks/api/endpoint.hook.ts","pages/Login/Login.wrapper.page.tsx","components/Navbar2/Navbar2.component.tsx","components/Rules/Rules.styles.ts","components/Rules/Rules.component.tsx","pages/Home/Home.styles.ts","pages/Home/Home.page.tsx","hooks/api/parking/parking-api.hook.ts","pages/Home/Home.container.tsx","layouts/Main.styles.ts","layouts/Main.layout.tsx","App.tsx","index.tsx","hooks/languages/language.hook.ts"],"names":["Language","BaseRoute","Route","auth","login","registration","home","main","history","details","useRoute","Form","styled","div","Dictionary","ENG","pages","phoneNumber","sendConfirmationCodeBtn","sendConfirmationCodePlaceholder","rules","first","second","third","navbar","parkings","profile","RUS","LanguageContext","React","createContext","Login","onLoginClick","onSendCodeClick","isError","dict","useContext","useState","phone","setPhone","code","setCode","isCodeSend","setCodeSend","type","placeholder","valueChange","value","title","click","useHttp","configObject","a","url","Error","method","fetch","body","JSON","stringify","headers","response","json","request","endpoint","sendConfirmationCode","apiVersion","data","driver","accessToken","Authorization","useDriverApi","localStorage","getItem","LoginWrapper","driverApi","navigate","useNavigate","setError","confirmationCode","then","setItem","r","Navbar2","route","LinkStyle","textDecoration","cursor","color","useTheme","plainText","to","style","Wrapper","props","theme","widgetBackground","RulesWrapper","LineWrapper","LineNumber","span","accent","LineDescription","Rules","WidgetsWrapper","Home","parkingWidget","size","lastParkingProcess","appVersion","HomeContainer","parkingApi","useParkingApi","parkingProcess","setParkingProcess","useEffect","Promise","all","isCompleted","parkingName","parking","date","entryCarTime","price","Math","trunc","payment","detailsClick","MainWrapper","background","MainLayout","App","path","element","ReactDOM","render","StrictMode","Provider","toString","test","navigator","language","document","getElementById"],"mappings":"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","file":"static/js/main.353dc6d4.chunk.js","sourcesContent":["export enum Language {\n  \"RUS\",\n  \"ENG\",\n}\n","interface IBaseRoute {\n  auth: string;\n  home: string;\n  history: string;\n}\n\nconst BaseRoute: IBaseRoute = {\n  auth: \"/auth\",\n  home: \"/home\",\n  history: \"/history\",\n};\n\ninterface IRoute {\n  auth: {\n    login: string;\n    registration: string;\n  };\n  home: {\n    main: string;\n  };\n  history: {\n    main: string;\n    details: string;\n  };\n}\n\nconst Route: IRoute = {\n  auth: {\n    login: BaseRoute.auth + \"/login\",\n    registration: BaseRoute.auth + \"/registration\",\n  },\n  home: {\n    main: BaseRoute.home,\n  },\n  history: {\n    main: BaseRoute.history,\n    details: BaseRoute.history + \"/:id\",\n  },\n};\n\nexport const useRoute = (): IRoute => {\n  return Route;\n};\n","import styled from \"styled-components\";\n\nexport const Form = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 15%;\n`;\n","import React from \"react\";\nimport { Language } from \"./language.enum\";\n\nexport type DictionaryType = {\n  [title in Language]: {\n    pages: {\n      login: {\n        phoneNumber: string;\n        sendConfirmationCodeBtn: string;\n        sendConfirmationCodePlaceholder: string;\n        login: string;\n      };\n      home: {\n        rules: {\n          first: string;\n          second: string;\n          third: string;\n        };\n      };\n    };\n    navbar: {\n      home: string;\n      history: string;\n      parkings: string;\n      profile: string;\n    };\n  };\n};\n\nexport const Dictionary: DictionaryType = {\n  [Language.ENG]: {\n    pages: {\n      login: {\n        phoneNumber: \"Phone number\",\n        sendConfirmationCodeBtn: \"Code\",\n        login: \"Login\",\n        sendConfirmationCodePlaceholder: \"Confirmation code\",\n      },\n      home: {\n        rules: {\n          first:\n            \"Before entering, make sure that the rear license plate is readable\",\n          second:\n            \"When entering the parking lot, our camera reads your vehicle number, no action is required from you\",\n          third:\n            \"When leaving, the camera reads the vehicle number, then automatically deducts the required amount from your card and opens the barrier\",\n        },\n      },\n    },\n    navbar: {\n      home: \"Home\",\n      history: \"History\",\n      parkings: \"Parkings\",\n      profile: \"Profile\",\n    },\n  },\n  [Language.RUS]: {\n    pages: {\n      login: {\n        phoneNumber: \"Номер телефона\",\n        sendConfirmationCodeBtn: \"Код\",\n        login: \"Войти\",\n        sendConfirmationCodePlaceholder: \"Код подтверждения\",\n      },\n      home: {\n        rules: {\n          first:\n            \"Перед въездом проверьте, что задний регистрационный знак читаем\",\n          second:\n            \"При въезде на парковку наша камера считает номер вашего транспортного средства, от вас никаких действий не требуется\",\n          third:\n            \"При выезде камера считает номер транспортного  средства, затем автоматически спишет с вашей карты нужную сумму и откроет шлагбаум\",\n        },\n      },\n    },\n    navbar: {\n      home: \"Главная\",\n      history: \"История\",\n      parkings: \"Парковки\",\n      profile: \"Профиль\",\n    },\n  },\n};\n\nexport const LanguageContext = React.createContext(Dictionary[Language.RUS]);\n","import { TextControl, Button } from \"@ermolaev/mind-ui\";\nimport { FC, useContext, useState } from \"react\";\nimport * as S from \"./Login.styles\";\nimport { LanguageContext } from \"../../context/languages\";\n\ninterface ILoginProps {\n  onLoginClick: (phone: string, confirmationCode: string) => void;\n  onSendCodeClick: (phone: string) => void;\n  isError: boolean;\n}\n\nexport const Login: FC<ILoginProps> = ({\n  onLoginClick,\n  onSendCodeClick,\n  isError,\n}) => {\n  const dict = useContext(LanguageContext);\n  const [phone, setPhone] = useState<string>(\"\");\n  const [code, setCode] = useState(\"\");\n  const [isCodeSend, setCodeSend] = useState(false);\n\n  if (isError) {\n    return <>Error</>;\n  }\n\n  const sendCodeHandler = () => {\n    setCodeSend(true);\n    onSendCodeClick(phone);\n  };\n\n  return (\n    <S.Form>\n      <TextControl\n        type={\"text\"}\n        placeholder={dict.pages.login.phoneNumber}\n        valueChange={(value: string) => setPhone(value)}\n      />\n      {isCodeSend && (\n        <TextControl\n          type={\"text\"}\n          placeholder={dict.pages.login.sendConfirmationCodePlaceholder}\n          valueChange={(value: string) => setCode(value)}\n        />\n      )}\n      <Button\n        title={\n          isCodeSend\n            ? dict.pages.login.login\n            : dict.pages.login.sendConfirmationCodeBtn\n        }\n        click={() =>\n          isCodeSend ? onLoginClick(phone, code) : sendCodeHandler()\n        }\n      />\n    </S.Form>\n  );\n};\n","import { IHttpRequest } from \"./http-request.interface\";\n\nexport const useHttp = () => {\n  return async <Req, Res>(\n    configObject: IHttpRequest<Req>,\n  ): Promise<Res | null> => {\n    if (!configObject || !configObject.url) {\n      throw new Error(\"П\");\n    }\n    if (\n      configObject.method !== \"GET\" &&\n      \"body\" in configObject &&\n      configObject.url\n    ) {\n      try {\n        const response = await fetch(configObject.url, {\n          method: configObject.method,\n          body: JSON.stringify(configObject.body),\n          headers: \"headers\" in configObject ? configObject.headers : {},\n        });\n        return await response.json();\n      } catch (e) {\n        return null;\n      }\n    }\n    try {\n      const response = await fetch(configObject.url, {\n        method: \"GET\",\n        headers: \"headers\" in configObject ? configObject.headers : {},\n      });\n      return await response.json();\n    } catch (e) {\n      throw new Error(\"Что то не так\");\n    }\n  };\n};\n","import { useHttp } from \"../../http\";\nimport { LoginDriverRequestDto } from \"./dto/login-driver-request.dto\";\nimport { useEndpoint } from \"../endpoint.hook\";\nimport { LoginDriverResponseDto } from \"./dto/login-driver-response.dto\";\nimport { GetDriverResponseDto } from \"./dto/get-driver-response.dto\";\n\nconst request = useHttp();\nconst endpoint = useEndpoint();\n\nconst sendConfirmationCode = async (\n  phoneNumber: LoginDriverRequestDto[\"phoneNumber\"],\n  apiVersion: string,\n) => {\n  return await request<\n    Pick<LoginDriverRequestDto, \"phoneNumber\">,\n    { error?: number; message?: string }\n  >({\n    url: endpoint + apiVersion + \"/driver/send-confirmation-code\",\n    method: \"POST\",\n    body: { phoneNumber },\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n};\n\nconst login = async (data: LoginDriverRequestDto, apiVersion: string) => {\n  return await request<LoginDriverRequestDto, LoginDriverResponseDto>({\n    url: endpoint + apiVersion + \"/driver/login\",\n    method: \"POST\",\n    body: data,\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n};\n\nconst driver = async (accessToken: string | null, apiVersion: string) => {\n  if (!accessToken) {\n    return null; // HANDLE\n  }\n  return await request<null, GetDriverResponseDto>({\n    url: endpoint + apiVersion + \"/driver\",\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${accessToken}`,\n    },\n  });\n};\n\nexport const useDriverApi = () => {\n  const accessToken = localStorage.getItem(\"at\");\n  return {\n    login,\n    sendConfirmationCode,\n    driver: (apiVersion = \"v4\") => driver(accessToken, apiVersion),\n  };\n};\n","export const useEndpoint = (): string => {\n  return \"https://smart-parking-system-server.herokuapp.com/api/\";\n};\n","import { Login } from \"./Login.page\";\nimport { FC, useState } from \"react\";\nimport { useDriverApi } from \"../../hooks/api\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport const LoginWrapper: FC = () => {\n  const driverApi = useDriverApi();\n  const navigate = useNavigate();\n  const [isError, setError] = useState(false);\n\n  const handleLoginClick = (phone: string, confirmationCode: string) => {\n    driverApi\n      .login({ phoneNumber: phone, confirmationCode }, \"v4\")\n      .then((response) => {\n        // if (response && \"error\" in response) {\n        // }\n        if (response && \"accessToken\" in response) {\n          localStorage.setItem(\"at\", response.accessToken);\n          navigate(\"/home\");\n        }\n      });\n  };\n\n  const handleCodeClick = (phone: string) => {\n    driverApi.sendConfirmationCode(phone, \"v4\").then((r) => {\n      if (r && \"error\" in r) {\n        setError(true);\n      }\n    });\n  };\n\n  // if (auth.accessToken) {\n  //   return (\n  //     <Routes>\n  //       <Route element={<Navigate to={route.home.main} />} />\n  //     </Routes>\n  //   );\n  // }\n\n  return (\n    <Login\n      onLoginClick={handleLoginClick}\n      onSendCodeClick={handleCodeClick}\n      isError={isError}\n    />\n  );\n};\n","import { Navbar, NavbarElement, useTheme } from \"@ermolaev/mind-ui\";\nimport { Link } from \"react-router-dom\";\nimport { useRoute } from \"../../hooks/routes\";\nimport { FC, useContext } from \"react\";\nimport { LanguageContext } from \"../../context/languages\";\n\nexport const Navbar2: FC = () => {\n  const route = useRoute();\n  const dict = useContext(LanguageContext);\n  const theme = useTheme();\n\n  const LinkStyle = {\n    textDecoration: \"none\",\n    cursor: \"pointer\",\n    color: theme.plainText,\n  };\n\n  return (\n    <Navbar>\n      <NavbarElement>\n        <Link to={route.home.main} style={LinkStyle}>\n          {dict.navbar.home}\n        </Link>\n      </NavbarElement>\n      <NavbarElement>\n        <Link to={route.home.main} style={LinkStyle}>\n          {dict.navbar.history}\n        </Link>\n      </NavbarElement>\n      <NavbarElement>\n        <Link to={route.home.main} style={LinkStyle}>\n          {dict.navbar.parkings}\n        </Link>\n      </NavbarElement>\n      <NavbarElement>\n        <Link to={route.home.main} style={LinkStyle}>\n          {dict.navbar.profile}\n        </Link>\n      </NavbarElement>\n    </Navbar>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 302px;\n  width: 928px;\n  background-color: ${(props) => props.theme.widgetBackground};\n  border-radius: 29px;\n  box-shadow: inset 0 0 0 2px rgba(1, 1, 1, 0.15),\n    inset 0 0 0 4px rgba(136, 109, 236, 0.68), 0 0 28px 0 rgba(0, 0, 0, 0.08);\n`;\n\nexport const RulesWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  width: 574px;\n`;\n\nexport const LineWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const LineNumber = styled.span`\n  font-size: 40px;\n  color: ${(props) => props.theme.accent};\n`;\n\nexport const LineDescription = styled.span`\n  margin-left: 66px;\n  font-size: 18px;\n  padding-bottom: 12px;\n  padding-top: 12px;\n  color: ${(props) => props.theme.plainText};\n`;\n","import * as S from \"./Rules.styles\";\nimport { FC, useContext } from \"react\";\nimport { LanguageContext } from \"../../context/languages\";\n\nexport const Rules: FC = () => {\n  const dict = useContext(LanguageContext);\n\n  return (\n    <S.Wrapper>\n      <S.RulesWrapper>\n        <S.LineWrapper>\n          <S.LineNumber>1</S.LineNumber>\n          <S.LineDescription>{dict.pages.home.rules.first}</S.LineDescription>\n        </S.LineWrapper>\n        <S.LineWrapper>\n          <S.LineNumber>2</S.LineNumber>\n          <S.LineDescription>{dict.pages.home.rules.second}</S.LineDescription>\n        </S.LineWrapper>\n        <S.LineWrapper>\n          <S.LineNumber>3</S.LineNumber>\n          <S.LineDescription>{dict.pages.home.rules.third}</S.LineDescription>\n        </S.LineWrapper>\n      </S.RulesWrapper>\n    </S.Wrapper>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const RulesWrapper = styled.div`\n  margin-top: 31px;\n`;\n\nexport const WidgetsWrapper = styled.div`\n  display: flex;\n  margin-top: 26px;\n  justify-content: space-between;\n`;\n","import { Rules } from \"../../components\";\nimport * as S from \"./Home.styles\";\nimport { FC } from \"react\";\nimport { IParkingWidgetData, ParkingWidget } from \"@ermolaev/mind-ui\";\n\nexport interface IHomeProps {\n  parkingWidget:\n    | IParkingWidgetData\n    | Pick<IParkingWidgetData, \"price\" | \"detailsClick\">;\n}\n\nexport const Home: FC<IHomeProps> = ({ parkingWidget }) => {\n  return (\n    <S.Wrapper>\n      <S.RulesWrapper>\n        <Rules />\n        <S.WidgetsWrapper>\n          <ParkingWidget size=\"mini\" data={parkingWidget} />\n          <ParkingWidget size=\"mini\" data={parkingWidget} />\n        </S.WidgetsWrapper>\n      </S.RulesWrapper>\n    </S.Wrapper>\n  );\n};\n","import { useHttp } from \"../../http\";\nimport { useEndpoint } from \"../endpoint.hook\";\nimport { GetLastParkingProcessDto } from \"./dto/get-last-parking-process.dto\";\n\nconst request = useHttp();\nconst endpoint = useEndpoint();\n\nconst lastParkingProcess = async (\n  accessToken: string | null,\n  appVersion: string,\n) => {\n  if (!accessToken) {\n    return null; // HANDLE\n  }\n  return await request<null, GetLastParkingProcessDto>({\n    url: endpoint + appVersion + \"/parking/pp/last\",\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${accessToken}`,\n    },\n  });\n};\n\nexport const useParkingApi = () => {\n  const accessToken = localStorage.getItem(\"at\");\n  return {\n    lastParkingProcess: (appVersion = \"v4\") =>\n      lastParkingProcess(accessToken, appVersion),\n  };\n};\n","import { Home } from \"./Home.page\";\nimport { useDriverApi } from \"../../hooks/api\";\nimport { FC, useEffect, useState } from \"react\";\nimport { useParkingApi } from \"../../hooks/api/parking/parking-api.hook\";\nimport { GetLastParkingProcessDto } from \"../../hooks/api/parking/dto/get-last-parking-process.dto\";\nimport { IParkingWidgetData } from \"@ermolaev/mind-ui\";\n\nconst prepareToParkingWidget = (\n  data: GetLastParkingProcessDto,\n): IParkingWidgetData | Pick<IParkingWidgetData, \"price\" | \"detailsClick\"> => {\n  if (data.isCompleted) {\n    return {\n      parkingName: data.parking.title,\n      date: data.entryCarTime,\n      price: Math.trunc(data.payment.value),\n      detailsClick: () => {\n        return;\n      },\n    };\n  }\n  return {\n    price: Math.trunc(data.payment.value),\n    detailsClick: () => {\n      return;\n    },\n  };\n};\n\nexport const HomeContainer: FC = () => {\n  const driverApi = useDriverApi();\n  const parkingApi = useParkingApi();\n  const [parkingProcess, setParkingProcess] =\n    useState<GetLastParkingProcessDto | null>();\n\n  useEffect(() => {\n    Promise.all([driverApi.driver(), parkingApi.lastParkingProcess()]).then(\n      (value) => {\n        setParkingProcess(value[1]);\n      },\n    );\n  }, []);\n\n  if (parkingProcess) {\n    return <Home parkingWidget={prepareToParkingWidget(parkingProcess)} />;\n  }\n\n  return <></>;\n};\n","import styled from \"styled-components\";\n\nexport const MainWrapper = styled.div`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Wrapper = styled.div`\n  background-color: ${(props) => props.theme.background};\n  height: 100vh;\n`;\n","import { Navbar2 } from \"../components\";\nimport * as S from \"./Main.styles\";\nimport { Outlet } from \"react-router-dom\";\nimport { FC } from \"react\";\n\nexport const MainLayout: FC = () => {\n  return (\n    <S.MainWrapper>\n      <Navbar2 />\n      <S.Wrapper>\n        <Outlet />\n      </S.Wrapper>\n    </S.MainWrapper>\n  );\n};\n","import { FC } from \"react\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport { useRoute } from \"./hooks/routes\";\nimport { LoginWrapper } from \"./pages/Login\";\nimport { HomeContainer } from \"./pages/Home\";\nimport { MainLayout } from \"./layouts/Main.layout\";\n\nconst App: FC = () => {\n  const route = useRoute();\n\n  return (\n    <Routes>\n      <Route path={route.auth.login} element={<LoginWrapper />} />\n      <Route path=\"/\" element={<MainLayout />}>\n        <Route path={route.home.main} element={<HomeContainer />} />\n      </Route>\n      <Route path=\"*\" element={<Navigate to={route.auth.login} />} />\n    </Routes>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\nimport { Dictionary, LanguageContext } from \"./context/languages\";\nimport { ThemeProvider } from \"styled-components\";\nimport { useTheme } from \"@ermolaev/mind-ui\";\nimport { useLanguage } from \"./hooks/languages\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={useTheme()}>\n      <LanguageContext.Provider value={Dictionary[useLanguage()]}>\n        <Router>\n          <App />\n        </Router>\n      </LanguageContext.Provider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n","import { Language } from \"../../context/languages\";\n\nexport const useLanguage = (): Language => {\n  if (localStorage.getItem(\"lang\")) {\n    return localStorage.getItem(\"lang\") === Language.RUS.toString()\n      ? Language.RUS\n      : Language.ENG;\n  }\n  if (/^ru\\b/.test(navigator.language)) {\n    return Language.RUS;\n  }\n  return Language.ENG;\n};\n"],"sourceRoot":""}