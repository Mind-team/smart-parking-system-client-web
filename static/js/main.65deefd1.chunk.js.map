{"version":3,"sources":["context/languages/language.enum.ts","hooks/routes/route.hook.ts","pages/Login/Login.styles.ts","context/languages/language.context.ts","hooks/models/modelToken.enum.ts","pages/Login/Login.page.tsx","pages/Login/Login.wrapper.page.tsx","components/Navbar2/Navbar2.component.tsx","components/Rules/Rules.styles.ts","components/Rules/Rules.component.tsx","components/Table/Table.styles.ts","components/Table/Table.component.tsx","pages/Home/Home.styles.ts","pages/Home/Home.page.tsx","hooks/models/model.hook.ts","pages/Home/Home.container.tsx","layouts/Main.styles.ts","layouts/Main.layout.tsx","pages/History/History.styles.ts","pages/History/History.page.tsx","pages/History/History.container.tsx","pages/History/ParkingProcessDetails/ParkingProcessDetails.styles.ts","pages/History/ParkingProcessDetails/ParkingProcessDetails.page.tsx","pages/History/ParkingProcessDetails/ParkingProcessDetails.container.tsx","App.tsx","index.tsx","hooks/languages/language.hook.ts"],"names":["Language","BaseRoute","Route","auth","login","registration","home","main","history","details","useRoute","Form","styled","div","ModelToken","Dictionary","ENG","pages","phoneNumber","sendConfirmationCodeBtn","sendConfirmationCodePlaceholder","rules","first","second","third","navbar","parkings","profile","RUS","LanguageContext","React","createContext","Login","onLoginClick","onSendCodeClick","isError","dict","useContext","useState","phone","setPhone","code","setCode","isCodeSend","setCodeSend","type","placeholder","valueChange","value","title","click","LoginWrapper","driverApi","useDriverApi","navigate","useNavigate","setError","confirmationCode","then","response","localStorage","setItem","accessToken","sendConfirmationCode","r","Navbar2","route","LinkStyle","textDecoration","cursor","color","useTheme","plainText","style","flexBasis","to","Wrapper","props","theme","widgetBackground","RulesWrapper","LineWrapper","LineNumber","span","accent","LineDescription","Rules","Content","Line","Table","data","d","Object","entries","length","map","idx","key","WidgetsWrapper","MiniWidgetsWrapper","Home","parkingWidget","plate","size","leftSideContent","rightSideContent","useModel","token","dto","Driver","driverFromDto","CompletedParkingProcess","payment","currency","Math","trunc","completedParkingProcessFromDto","UncompletedParkingProcess","departureCarTime","isCompleted","uncompletedParkingProcessFromDto","Error","HomeContainer","getItem","parkingApi","useParkingApi","parkingProcess","setParkingProcess","setPlate","useEffect","Promise","all","driver","lastParkingProcess","isCorrectResponse","parkingProcessModel","driverModel","carPlates","price","detailsClick","console","log","MainWrapper","background","MainLayout","WidgetWrapper","SortBarWrapper","History","parkingProcesses","onDetailsClick","clickHandler","parameters","carPlate","process","date","entryCarTime","parkingName","parking","_id","HistoryContainer","pp","setPP","error","ppModels","catch","processId","ParkingProcessDetails","prepareData","Паркинг","Date","toLocaleDateString","toLocaleTimeString","Сумма","ParkingProcessDetailsContainer","id","useParams","App","path","element","ReactDOM","render","StrictMode","Provider","toString","test","navigator","language","document","getElementById"],"mappings":"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","file":"static/js/main.65deefd1.chunk.js","sourcesContent":["export enum Language {\n  \"RUS\",\n  \"ENG\",\n}\n","interface IBaseRoute {\n  auth: string;\n  home: string;\n  history: string;\n}\n\nconst BaseRoute: IBaseRoute = {\n  auth: \"/auth\",\n  home: \"/home\",\n  history: \"/history\",\n};\n\ninterface IRoute {\n  auth: {\n    login: string;\n    registration: string;\n  };\n  home: {\n    main: string;\n  };\n  history: {\n    main: string;\n    details: string;\n  };\n}\n\nconst Route: IRoute = {\n  auth: {\n    login: BaseRoute.auth + \"/login\",\n    registration: BaseRoute.auth + \"/registration\",\n  },\n  home: {\n    main: BaseRoute.home,\n  },\n  history: {\n    main: BaseRoute.history,\n    details: BaseRoute.history + \"/details\" + \"/:id\",\n  },\n};\n\nexport const useRoute = (): IRoute => {\n  return Route;\n};\n","import styled from \"styled-components\";\n\nexport const Form = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 15%;\n`;\n","import React from \"react\";\nimport { Language } from \"./language.enum\";\n\nexport type DictionaryType = {\n  [title in Language]: {\n    pages: {\n      login: {\n        phoneNumber: string;\n        sendConfirmationCodeBtn: string;\n        sendConfirmationCodePlaceholder: string;\n        login: string;\n      };\n      home: {\n        rules: {\n          first: string;\n          second: string;\n          third: string;\n        };\n      };\n    };\n    navbar: {\n      home: string;\n      history: string;\n      parkings: string;\n      profile: string;\n    };\n  };\n};\n\nexport const Dictionary: DictionaryType = {\n  [Language.ENG]: {\n    pages: {\n      login: {\n        phoneNumber: \"Phone number\",\n        sendConfirmationCodeBtn: \"Code\",\n        login: \"Login\",\n        sendConfirmationCodePlaceholder: \"Confirmation code\",\n      },\n      home: {\n        rules: {\n          first:\n            \"Before entering, make sure that the rear license plate is readable\",\n          second:\n            \"When entering the parking lot, our camera reads your vehicle number, no action is required from you\",\n          third:\n            \"When leaving, the camera reads the vehicle number, then automatically deducts the required amount from your card and opens the barrier\",\n        },\n      },\n    },\n    navbar: {\n      home: \"Home\",\n      history: \"History\",\n      parkings: \"Parkings\",\n      profile: \"Profile\",\n    },\n  },\n  [Language.RUS]: {\n    pages: {\n      login: {\n        phoneNumber: \"Номер телефона\",\n        sendConfirmationCodeBtn: \"Код\",\n        login: \"Войти\",\n        sendConfirmationCodePlaceholder: \"Код подтверждения\",\n      },\n      home: {\n        rules: {\n          first:\n            \"Перед въездом проверьте, что задний регистрационный знак читаем\",\n          second:\n            \"При въезде на парковку наша камера считает номер вашего транспортного средства, от вас никаких действий не требуется\",\n          third:\n            \"При выезде камера считает номер транспортного  средства, затем автоматически спишет с вашей карты нужную сумму и откроет шлагбаум\",\n        },\n      },\n    },\n    navbar: {\n      home: \"Главная\",\n      history: \"История\",\n      parkings: \"Парковки\",\n      profile: \"Профиль\",\n    },\n  },\n};\n\nexport const LanguageContext = React.createContext(Dictionary[Language.RUS]);\n","export enum ModelToken {\n  Driver,\n  CompletedParkingProcess,\n  UncompletedParkingProcess,\n}\n","import { TextControl, Button } from \"@ermolaev/mind-ui\";\nimport { FC, useContext, useState } from \"react\";\nimport * as S from \"./Login.styles\";\nimport { LanguageContext } from \"../../context/languages\";\n\ninterface ILoginProps {\n  onLoginClick: (phone: string, confirmationCode: string) => void;\n  onSendCodeClick: (phone: string) => void;\n  isError: boolean;\n}\n\nexport const Login: FC<ILoginProps> = ({\n  onLoginClick,\n  onSendCodeClick,\n  isError,\n}) => {\n  const dict = useContext(LanguageContext);\n  const [phone, setPhone] = useState<string>(\"\");\n  const [code, setCode] = useState(\"\");\n  const [isCodeSend, setCodeSend] = useState(false);\n\n  if (isError) {\n    return <>Error</>;\n  }\n\n  const sendCodeHandler = () => {\n    setCodeSend(true);\n    onSendCodeClick(phone);\n  };\n\n  return (\n    <S.Form>\n      <TextControl\n        type={\"text\"}\n        placeholder={dict.pages.login.phoneNumber}\n        valueChange={(value: string) => setPhone(value)}\n      />\n      {isCodeSend && (\n        <TextControl\n          type={\"text\"}\n          placeholder={dict.pages.login.sendConfirmationCodePlaceholder}\n          valueChange={(value: string) => setCode(value)}\n        />\n      )}\n      <Button\n        title={\n          isCodeSend\n            ? dict.pages.login.login\n            : dict.pages.login.sendConfirmationCodeBtn\n        }\n        click={() =>\n          isCodeSend ? onLoginClick(phone, code) : sendCodeHandler()\n        }\n      />\n    </S.Form>\n  );\n};\n","import { Login } from \"./Login.page\";\nimport { FC, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDriverApi } from \"@ermolaev/mind-common\";\n\nexport const LoginWrapper: FC = () => {\n  const driverApi = useDriverApi(\"\");\n  const navigate = useNavigate();\n  const [isError, setError] = useState(false);\n\n  const handleLoginClick = (phone: string, confirmationCode: string) => {\n    driverApi\n      .login({ phoneNumber: phone, confirmationCode }, \"v4\")\n      .then((response) => {\n        if (response && \"accessToken\" in response) {\n          localStorage.setItem(\"at\", response.accessToken);\n          navigate(\"/home\");\n        }\n      });\n  };\n\n  const handleCodeClick = (phone: string) => {\n    driverApi.sendConfirmationCode(phone, \"v4\").then((r) => {\n      if (r && \"error\" in r) {\n        setError(true);\n      }\n    });\n  };\n\n  return (\n    <Login\n      onLoginClick={handleLoginClick}\n      onSendCodeClick={handleCodeClick}\n      isError={isError}\n    />\n  );\n};\n","import { Navbar, NavbarElement, useTheme } from \"@ermolaev/mind-ui\";\nimport { Link } from \"react-router-dom\";\nimport { useRoute } from \"../../hooks/routes\";\nimport { FC, useContext } from \"react\";\nimport { LanguageContext } from \"../../context/languages\";\n\nexport const Navbar2: FC = () => {\n  const route = useRoute();\n  const dict = useContext(LanguageContext);\n  const theme = useTheme();\n\n  const LinkStyle = {\n    textDecoration: \"none\",\n    cursor: \"pointer\",\n    color: theme.plainText,\n  };\n\n  return (\n    <div style={{ flexBasis: \"56px\" }}>\n      <Navbar>\n        <NavbarElement>\n          <Link to={route.home.main} style={LinkStyle}>\n            {dict.navbar.home}\n          </Link>\n        </NavbarElement>\n        <NavbarElement>\n          <Link to={route.history.main} style={LinkStyle}>\n            {dict.navbar.history}\n          </Link>\n        </NavbarElement>\n        <NavbarElement>\n          <Link to={route.home.main} style={LinkStyle}>\n            {dict.navbar.parkings}\n          </Link>\n        </NavbarElement>\n        <NavbarElement>\n          <Link to={route.home.main} style={LinkStyle}>\n            {dict.navbar.profile}\n          </Link>\n        </NavbarElement>\n      </Navbar>\n    </div>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 302px;\n  width: 928px;\n  background-color: ${(props) => props.theme.widgetBackground};\n  border-radius: 29px;\n  box-shadow: inset 0 0 0 2px rgba(1, 1, 1, 0.15),\n    inset 0 0 0 4px rgba(136, 109, 236, 0.68), 0 0 28px 0 rgba(0, 0, 0, 0.08);\n`;\n\nexport const RulesWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  width: 574px;\n`;\n\nexport const LineWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const LineNumber = styled.span`\n  font-size: 40px;\n  color: ${(props) => props.theme.accent};\n`;\n\nexport const LineDescription = styled.span`\n  margin-left: 66px;\n  font-size: 18px;\n  padding-bottom: 12px;\n  padding-top: 12px;\n  color: ${(props) => props.theme.plainText};\n`;\n","import * as S from \"./Rules.styles\";\nimport { FC, useContext } from \"react\";\nimport { LanguageContext } from \"../../context/languages\";\n\nexport const Rules: FC = () => {\n  const dict = useContext(LanguageContext);\n\n  return (\n    <S.Wrapper>\n      <S.RulesWrapper>\n        <S.LineWrapper>\n          <S.LineNumber>1</S.LineNumber>\n          <S.LineDescription>{dict.pages.home.rules.first}</S.LineDescription>\n        </S.LineWrapper>\n        <S.LineWrapper>\n          <S.LineNumber>2</S.LineNumber>\n          <S.LineDescription>{dict.pages.home.rules.second}</S.LineDescription>\n        </S.LineWrapper>\n        <S.LineWrapper>\n          <S.LineNumber>3</S.LineNumber>\n          <S.LineDescription>{dict.pages.home.rules.third}</S.LineDescription>\n        </S.LineWrapper>\n      </S.RulesWrapper>\n    </S.Wrapper>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  width: 1015px;\n  padding: 48px 0;\n  border-radius: 35px;\n  background-color: ${(props) => props.theme.widgetBackground};\n  color: ${(props) => props.theme.plainText};\n  font-size: 25px;\n  box-shadow: 0 0 10px rgba(25, 25, 25, 0.15);\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Line = styled.div`\n  margin-bottom: 15px;\n`;\n","import { FC } from \"react\";\nimport * as S from \"./Table.styles\";\n\nexport interface ITable {\n  data: Record<string, string>;\n}\n\nexport const Table: FC<ITable> = ({ data }) => {\n  const d = Object.entries(data);\n\n  if (d.length > 0) {\n    return (\n      <S.Wrapper>\n        <S.Content>\n          {d.map(([key, value], idx) => (\n            <S.Line key={idx}>\n              {key}: {value}\n            </S.Line>\n          ))}\n        </S.Content>\n      </S.Wrapper>\n    );\n  }\n\n  return <div>Пусто</div>;\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const RulesWrapper = styled.div`\n  margin-top: 31px;\n`;\n\nexport const WidgetsWrapper = styled.div`\n  display: flex;\n  margin-top: 26px;\n  justify-content: space-between;\n`;\n\nexport const MiniWidgetsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n","import { Rules } from \"../../components\";\nimport * as S from \"./Home.styles\";\nimport { FC } from \"react\";\nimport {\n  InfoWidget,\n  IParkingWidgetData,\n  ParkingWidget,\n} from \"@ermolaev/mind-ui\";\n\nexport interface IHomeProps {\n  parkingWidget:\n    | IParkingWidgetData\n    | Pick<IParkingWidgetData, \"price\" | \"detailsClick\">;\n  plate: string;\n}\n\nexport const Home: FC<IHomeProps> = ({ parkingWidget, plate }) => {\n  return (\n    <S.Wrapper>\n      <S.RulesWrapper>\n        <Rules />\n        <S.WidgetsWrapper>\n          <ParkingWidget size=\"mini\" data={parkingWidget} />\n          <S.MiniWidgetsWrapper>\n            <InfoWidget\n              size=\"mini\"\n              data={{\n                leftSideContent: \"Ваша карта:\",\n                rightSideContent: \":(\",\n              }}\n            />\n            <InfoWidget\n              size=\"mini\"\n              data={{\n                leftSideContent: \"Ваш номер:\",\n                rightSideContent: plate,\n              }}\n            />\n          </S.MiniWidgetsWrapper>\n        </S.WidgetsWrapper>\n      </S.RulesWrapper>\n    </S.Wrapper>\n  );\n};\n","import {\n  GetDriverResponseDto,\n  GetLastParkingProcessDto,\n  GetPPResponseDto,\n} from \"@ermolaev/mind-common\";\nimport { ICompletedParkingProcess } from \"./interfaces/completedParkingProcess.interface\";\nimport { IDriver } from \"./interfaces/driver.interface\";\nimport { ModelToken } from \"./modelToken.enum\";\nimport { IUncompletedParkingProcess } from \"./interfaces/uncompletedParkingProcess.interface\";\n\nconst driverFromDto = (dto: GetDriverResponseDto): IDriver => {\n  return { ...dto };\n};\n\nconst completedParkingProcessFromDto = (\n  dto: GetLastParkingProcessDto,\n): ICompletedParkingProcess => {\n  return {\n    ...dto,\n    payment: {\n      currency: dto.payment.currency,\n      value: Math.trunc(dto.payment.value),\n    },\n  };\n};\n\nconst uncompletedParkingProcessFromDto = (\n  dto: GetPPResponseDto,\n): IUncompletedParkingProcess => {\n  return {\n    ...dto,\n    departureCarTime: null,\n    payment: {\n      currency: dto.payment.currency,\n      value: null,\n    },\n    isCompleted: false,\n  };\n};\n\nexport const useModel = <DTO, Model>(token: ModelToken, dto: DTO): Model => {\n  switch (token) {\n    case ModelToken.Driver:\n      return driverFromDto(\n        dto as unknown as GetDriverResponseDto,\n      ) as unknown as Model;\n    case ModelToken.CompletedParkingProcess:\n      return completedParkingProcessFromDto(\n        dto as unknown as GetLastParkingProcessDto,\n      ) as unknown as Model;\n    case ModelToken.UncompletedParkingProcess:\n      return uncompletedParkingProcessFromDto(\n        dto as unknown as GetPPResponseDto,\n      ) as unknown as Model;\n    default:\n      throw new Error(token + \" не существует\");\n  }\n};\n","import { Home } from \"./Home.page\";\nimport { FC, useEffect, useState } from \"react\";\nimport {\n  GetDriverResponseDto,\n  GetLastParkingProcessDto,\n  useDriverApi,\n  useParkingApi,\n  isCorrectResponse,\n} from \"@ermolaev/mind-common\";\nimport {\n  ICompletedParkingProcess,\n  IDriver,\n  ModelToken,\n  useModel,\n} from \"../../hooks/models\";\n\nexport const HomeContainer: FC = () => {\n  const driverApi = useDriverApi(localStorage.getItem(\"at\") as string);\n  const parkingApi = useParkingApi(localStorage.getItem(\"at\") as string);\n  const [parkingProcess, setParkingProcess] =\n    useState<ICompletedParkingProcess>();\n  const [plate, setPlate] = useState<string>(\"\");\n  const [isError, setError] = useState(false);\n\n  useEffect(() => {\n    Promise.all([driverApi.driver(), parkingApi.lastParkingProcess()]).then(\n      ([driver, parkingProcess]) => {\n        if (isCorrectResponse<GetLastParkingProcessDto>(parkingProcess)) {\n          const parkingProcessModel = useModel<\n            GetLastParkingProcessDto,\n            ICompletedParkingProcess\n          >(ModelToken.CompletedParkingProcess, parkingProcess);\n          if (!parkingProcessModel) {\n            setError(true);\n            return;\n          }\n          setParkingProcess(parkingProcessModel);\n        }\n        if (isCorrectResponse(driver)) {\n          const driverModel = useModel<GetDriverResponseDto, IDriver>(\n            ModelToken.Driver,\n            driver,\n          );\n          if (!driverModel) {\n            setError(true);\n            return;\n          }\n          setPlate(driverModel.carPlates[0]);\n        }\n      },\n    );\n  }, []);\n\n  if (isError) {\n    return <>Error</>;\n  }\n\n  if (parkingProcess) {\n    return (\n      <Home\n        parkingWidget={{\n          ...parkingProcess,\n          price: parkingProcess.payment.value,\n          detailsClick: () => console.log(\"1\"),\n        }}\n        plate={plate}\n      />\n    );\n  }\n\n  return <>Loading</>;\n};\n","import styled from \"styled-components\";\n\nexport const MainWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n`;\n\nexport const Wrapper = styled.div`\n  flex-grow: 1;\n  background-color: ${(props) => props.theme.background};\n`;\n","import { Navbar2 } from \"../components\";\nimport * as S from \"./Main.styles\";\nimport { Outlet } from \"react-router-dom\";\nimport { FC } from \"react\";\n\nexport const MainLayout: FC = () => {\n  return (\n    <S.MainWrapper>\n      <Navbar2 />\n      <S.Wrapper>\n        <Outlet />\n      </S.Wrapper>\n    </S.MainWrapper>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const WidgetWrapper = styled.div`\n  padding: 31px;\n`;\n\nexport const SortBarWrapper = styled.div`\n  padding: 31px;\n`;\n","import { ICompletedParkingProcess } from \"../../hooks/models\";\nimport { FC } from \"react\";\nimport * as S from \"./History.styles\";\nimport { ParkingWidget, Sortbar } from \"@ermolaev/mind-ui\";\n\ninterface IHistoryProps {\n  parkingProcesses: ICompletedParkingProcess[];\n  onDetailsClick: (parkingProcessId: string) => void;\n}\n\nexport const History: FC<IHistoryProps> = ({\n  parkingProcesses,\n  onDetailsClick,\n}) => {\n  return (\n    <S.Wrapper>\n      <S.SortBarWrapper>\n        <Sortbar\n          clickHandler={() => console.log(\"Click\")}\n          parameters={[\n            \"Время\",\n            \"Стоимость\",\n            parkingProcesses[0].driver.carPlate,\n          ]}\n        />\n      </S.SortBarWrapper>\n      {!parkingProcesses.length && <div>Нет</div>}\n      {parkingProcesses.length > 0 &&\n        parkingProcesses.map((process, idx) => (\n          <S.WidgetWrapper key={idx}>\n            <ParkingWidget\n              key={idx}\n              size=\"long\"\n              data={{\n                date: process.entryCarTime,\n                parkingName: process.parking.title,\n                price: process.payment.value,\n                detailsClick: () => {\n                  onDetailsClick(process._id);\n                },\n              }}\n            />\n          </S.WidgetWrapper>\n        ))}\n    </S.Wrapper>\n  );\n};\n","import { isCorrectResponse, useDriverApi } from \"@ermolaev/mind-common\";\nimport { FC, useEffect, useState } from \"react\";\nimport {\n  ICompletedParkingProcess,\n  ModelToken,\n  useModel,\n} from \"../../hooks/models\";\nimport { History } from \"./History.page\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport const HistoryContainer: FC = () => {\n  const driverApi = useDriverApi(localStorage.getItem(\"at\") as string);\n  const navigate = useNavigate();\n  const [pp, setPP] = useState<ICompletedParkingProcess[]>();\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    driverApi\n      .parkingProcesses()\n      .then((pp) => {\n        if (!isCorrectResponse(pp)) {\n          setError(true);\n          return;\n        }\n        const ppModels = pp.map((pp) => {\n          return useModel(ModelToken.CompletedParkingProcess, pp);\n        });\n        setPP(ppModels as ICompletedParkingProcess[]);\n      })\n      .catch(() => setError(true));\n  }, []);\n\n  const onDetailsClick = (processId: string) => {\n    navigate(\"./details/\" + processId);\n  };\n\n  if (error) {\n    return <>Error</>;\n  }\n\n  if (pp) {\n    return <History parkingProcesses={pp} onDetailsClick={onDetailsClick} />;\n  }\n\n  return <>Loading</>;\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n`;\n","import * as S from \"./ParkingProcessDetails.styles\";\nimport { Table } from \"../../../components\";\nimport { FC } from \"react\";\n\nexport interface IParkingProcessDetails {\n  data: Record<string, string>;\n}\n\nexport const ParkingProcessDetails: FC<IParkingProcessDetails> = ({ data }) => {\n  return (\n    <S.Wrapper>\n      <Table data={data} />\n    </S.Wrapper>\n  );\n};\n","import { ParkingProcessDetails } from \"./ParkingProcessDetails.page\";\nimport {\n  ICompletedParkingProcess,\n  ModelToken,\n  useModel,\n} from \"../../../hooks/models\";\nimport { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { isCorrectResponse, useParkingApi } from \"@ermolaev/mind-common\";\n\nconst prepareData = (parkingProcess: ICompletedParkingProcess) => {\n  return {\n    Паркинг: parkingProcess.parking.title,\n    \"Дата въезда\": new Date(parkingProcess.entryCarTime).toLocaleDateString(),\n    \"Дата выезда\": new Date(\n      parkingProcess.departureCarTime,\n    ).toLocaleDateString(),\n    \"Время въезда\": new Date(parkingProcess.entryCarTime).toLocaleTimeString(),\n    \"Время выезда\": new Date(\n      parkingProcess.departureCarTime,\n    ).toLocaleTimeString(),\n    \"Регистрационный знак транспорта\": parkingProcess.driver.carPlate,\n    Сумма: parkingProcess.payment.value + \"\",\n  };\n};\n\nexport interface IParkingProcessDetailsContainerProps {\n  parkingProcess: ICompletedParkingProcess;\n}\n\nexport const ParkingProcessDetailsContainer = () => {\n  const parkingApi = useParkingApi(\"\");\n  const id = useParams().id;\n  const [parkingProcess, setParkingProcess] =\n    useState<ICompletedParkingProcess>();\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    if (!id) {\n      setError(true);\n    }\n    parkingApi.parkingProcess(id as string).then((response) => {\n      if (!isCorrectResponse(response)) {\n        setError(true);\n        return;\n      }\n      const parkingProcess = useModel(\n        ModelToken.CompletedParkingProcess,\n        response,\n      );\n      setParkingProcess(parkingProcess as ICompletedParkingProcess);\n    });\n  });\n\n  if (error) {\n    return <>Что-то не так :(</>;\n  }\n\n  if (parkingProcess) {\n    return (\n      <ParkingProcessDetails\n        data={prepareData(parkingProcess) as Record<string, string>}\n      />\n    );\n  }\n\n  return <>Загрузка</>;\n};\n","import { FC } from \"react\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport { useRoute } from \"./hooks/routes\";\nimport { LoginWrapper } from \"./pages/Login\";\nimport { HomeContainer } from \"./pages/Home\";\nimport { MainLayout } from \"./layouts/Main.layout\";\nimport { HistoryContainer } from \"./pages/History\";\nimport { ParkingProcessDetailsContainer } from \"./pages/History/ParkingProcessDetails\";\n\nconst App: FC = () => {\n  const route = useRoute();\n\n  return (\n    <Routes>\n      <Route path={route.auth.login} element={<LoginWrapper />} />\n      <Route path=\"/\" element={<MainLayout />}>\n        <Route path={route.home.main} element={<HomeContainer />} />\n        <Route path={route.history.main} element={<HistoryContainer />} />\n        <Route\n          path={route.history.details}\n          element={<ParkingProcessDetailsContainer />}\n        />\n      </Route>\n      <Route path=\"*\" element={<Navigate to={route.auth.login} />} />\n    </Routes>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\nimport { Dictionary, LanguageContext } from \"./context/languages\";\nimport { ThemeProvider } from \"styled-components\";\nimport { useTheme } from \"@ermolaev/mind-ui\";\nimport { useLanguage } from \"./hooks/languages\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={useTheme()}>\n      <LanguageContext.Provider value={Dictionary[useLanguage()]}>\n        <Router>\n          <App />\n        </Router>\n      </LanguageContext.Provider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n","import { Language } from \"../../context/languages\";\n\nexport const useLanguage = (): Language => {\n  if (localStorage.getItem(\"lang\")) {\n    return localStorage.getItem(\"lang\") === Language.RUS.toString()\n      ? Language.RUS\n      : Language.ENG;\n  }\n  if (/^ru\\b/.test(navigator.language)) {\n    return Language.RUS;\n  }\n  return Language.ENG;\n};\n"],"sourceRoot":""}